swagger: '2.0'

info:
  version: '0.0.1-SNAPSHOT'
  title: 'API - Animals'
  description: 'API de recursos de manipulação para Animals'

host: localhost:8080
basePath: /api/v1

schemes:
  - http
  - https

produces:
  - "application/json"
tags:
  - name: "Carros"
    description: "Operações para o recurso Carro"

paths:
  /carros:
    get:
      tags:
        - "Carros"
      summary: Lista todos os carros cadastrados
      description: Lista todos os detalhes dos carros cadastrados.
      operationId: listAllCarro
      produces:
        - application/json
      responses:
        200:
          description: Representação dos dados de todos os animais cadastrados.
          schema:
            $ref: '#/definitions/ResponseGetCarros'
        404:
          description: "Nenhum carro encontrado"
        500:
          description: "Erro interno"
  /carros:
    post:
      tags:
      - "Carros"
      summary: "Adiciona um novo carro"
      description: "Inclui um novo carro retornando a URI de acesso ao recurso"
      operationId: "adicionaCarro"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto do tipo carro que será adicionado"
        required: true
        schema:
          $ref: "#/definitions/CarroModel"
      responses:
        201:
          description: "Carro adicionado com sucesso"
          schema:
            $ref: '#/definitions/ResponsePostCarros'
        405:
          description: "Entrada inválida"
        500:
          description: "Erro interno"
  /carros/{id}:
    get:
      tags:
        - "Carros"
      summary: Lista um carro específico
      description: Lista os detalhes de um carro específico de acordo com o ID.
      operationId: listCarro
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          format: "int64"
          required: true
      responses:
        200:
          description: "Detalhe do carro encontrado"
          schema:
            $ref: '#/definitions/ResponseGetCarrosById'
        404:
          description: Nenhum carro encontrado correspondente ao ID informado
        500:
          description: Erro interno

definitions:
  ResponseGetCarros:
    type: object
    properties:
      carros:
        type: array
        items:
          $ref: '#/definitions/CarroModel'

  ResponseGetCarrosById:
    type: object
    properties:
      carro:
        $ref: '#/definitions/CarroModel'

  ResponsePostCarros:
    type: object
    properties:
      uri:
        type: "string"
      carro:
        $ref: '#/definitions/CarroModel'

  TipoCarro:
    type: "object"
    required:
      - "codigo"
      - "descricao"
    properties:
      id:
        type: "integer"
        format: "int64"
      codigo:
        type: "integer"
        format: "int64"
      descricao:
        type: "string"

  Carro:
    type: "object"
    required:
      - "codigo"
      - "descricao"
      - "dataCriacao"
      - "dataAtualizacao"
    properties:
      id:
        type: "integer"
        format: "int64"
      codigo:
        type: "integer"
        format: "int64"
      descricao:
        type: "string"
      dataCriacao:
        type: "string"
        format: "date"
      dataAtualizacao:
        type: "string"
        format: "date-time"
      tipoCarro:
        $ref: "#/definitions/TipoCarro"
  CarroModel:
    type: "object"
    required:
      - "codigo"
      - "descricao"
      - "dataCriacao"
      - "dataAtualizacao"
    properties:
      codigo:
        type: "string"
      descricao:
        type: "string"
      dataCriacao:
        type: "string"
      dataAtualizacao:
        type: "string"
      tipoCarro:
        type: "string"
